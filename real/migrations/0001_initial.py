# Generated by Django 2.2 on 2022-05-19 21:12

import datetime
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('fullname', models.CharField(default='', max_length=50)),
                ('usertitle', models.CharField(default='', max_length=50)),
                ('about', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=50)),
                ('zip', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('register_as', models.CharField(default='', max_length=100)),
                ('username', models.CharField(max_length=20, unique=True)),
                ('phonenumber', models.CharField(blank=True, default='', max_length=15, null=True)),
                ('facebook_link', models.CharField(max_length=50)),
                ('twitter_link', models.CharField(max_length=200)),
                ('google_link', models.CharField(max_length=200)),
                ('linkdin', models.CharField(max_length=200)),
                ('photo', models.FileField(default='avatar.png', upload_to='images/profile_img')),
                ('address', models.TextField()),
                ('package', models.CharField(choices=[('BASIC PACKAGE', 'BASIC PACKAGE'), ('PLATINUM PACKAGE', 'PLATINUM PACKAGE'), ('STANDARD PACKAGE', 'STANDARD PACKAGE')], default='BASIC PACKAGE', max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=225)),
                ('status', models.CharField(max_length=225)),
                ('property_type', models.CharField(max_length=225)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('area', models.CharField(max_length=225)),
                ('bedrooms', models.CharField(max_length=225)),
                ('bathrooms', models.CharField(max_length=225)),
                ('image', models.FileField(upload_to='')),
                ('address', models.CharField(max_length=225)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zipcode', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('building_Age', models.CharField(blank=True, max_length=225, null=True)),
                ('garage', models.CharField(blank=True, default=0, max_length=225, null=True)),
                ('Rooms', models.CharField(blank=True, max_length=225, null=True)),
                ('sqft', models.IntegerField()),
                ('lot_size', models.DecimalField(decimal_places=1, max_digits=5)),
                ('photo_1', models.ImageField(blank=True, upload_to='images/photos')),
                ('photo_2', models.ImageField(blank=True, upload_to='images/photos')),
                ('photo_3', models.ImageField(blank=True, upload_to='images/photos')),
                ('photo_4', models.ImageField(blank=True, upload_to='images/photos')),
                ('photo_5', models.ImageField(blank=True, upload_to='images/photos')),
                ('photo_6', models.ImageField(blank=True, upload_to='images/photos')),
                ('contact_name', models.CharField(max_length=100)),
                ('contact_email', models.CharField(max_length=225)),
                ('contact_phone', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('is_published', models.BooleanField(default=True)),
                ('slug', models.SlugField(blank=True, default='', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
